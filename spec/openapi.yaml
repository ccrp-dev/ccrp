openapi: 3.1.0
info:
  title: Coalesced Chunk Read Protocol (CCRP)
  version: 0.1.0
  description: |
    CCRP is a high-performance, read-only API designed to solve the N+1 request problem
    for chunked datasets in cloud object storage. It acts as a "byte broker" that coalesces
    multiple chunk requests into efficient, parallelized operations.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

servers:
  - url: https://api.example.com
    description: Example CCRP server

paths:
  /:
    get:
      summary: API landing page and conformance information
      description: Returns information about the CCRP service, its capabilities, and conformance classes
      operationId: getLandingPage
      responses:
        '200':
          description: Service information and capabilities
          content:
            application/json:
              schema:
                type: object
                required:
                  - conformsTo
                  - links
                properties:
                  title:
                    type: string
                    example: "Example CCRP Service"
                  description:
                    type: string
                    example: "CCRP service providing efficient access to chunked climate data"
                  attribution:
                    type: string
                    example: "Data provided by NOAA"
                  conformsTo:
                    type: array
                    items:
                      type: string
                      format: uri
                    example:
                      - "https://ccrp.io/spec/v1/conformance/core"
                      - "https://ccrp.io/spec/v1/conformance/range-requests"
                  links:
                    type: array
                    items:
                      $ref: '#/components/schemas/Link'
                    example:
                      - href: "/"
                        rel: "self"
                        type: "application/json"
                      - href: "/dataset"
                        rel: "https://ccrp.io/spec/v1/rel/datasets"
                        type: "application/json"
                        title: "Available datasets"
                      - href: "/conformance"
                        rel: "conformance"
                        type: "application/json"
                        title: "Conformance declaration"
                      - href: "/api"
                        rel: "service-desc"
                        type: "application/vnd.oai.openapi+json;version=3.0"
                        title: "OpenAPI service description"

  /conformance:
    get:
      summary: Conformance declaration
      description: Returns the list of conformance classes supported by this CCRP implementation
      operationId: getConformance
      responses:
        '200':
          description: Conformance classes
          content:
            application/json:
              schema:
                type: object
                required:
                  - conformsTo
                properties:
                  conformsTo:
                    type: array
                    items:
                      type: string
                      format: uri
                    example:
                      - "https://ccrp.io/spec/v1/conformance/core"
                      - "https://ccrp.io/spec/v1/conformance/range-requests"
                      - "https://ccrp.io/spec/v1/conformance/multipart-responses"
                      - "https://ccrp.io/spec/v1/conformance/advanced-queries"

  /dataset:
    get:
      summary: List available datasets
      description: Returns a paginated list of all datasets available through this CCRP service
      operationId: listDatasets
      parameters:
        - name: limit
          in: query
          description: Maximum number of datasets to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
        - name: token
          in: query
          description: Pagination token from previous response
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of available datasets
          content:
            application/json:
              schema:
                type: object
                required:
                  - datasets
                  - links
                properties:
                  datasets:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - title
                        - links
                      properties:
                        id:
                          type: string
                          example: "noaa-goes-17-L2"
                        title:
                          type: string
                          example: "NOAA GOES-17 Level 2 Data"
                        description:
                          type: string
                        format:
                          type: string
                          enum: [zarr, iceberg, delta, hive]
                        links:
                          type: array
                          items:
                            $ref: '#/components/schemas/Link'
                  links:
                    type: array
                    items:
                      $ref: '#/components/schemas/Link'
                    example:
                      - href: "/dataset"
                        rel: "self"
                        type: "application/json"
                      - href: "/dataset?token=eyJsYXN0X2lkIjoibm9hYS1nb2VzLTE3LUwyIn0&limit=100"
                        rel: "next"
                        type: "application/json"
                  nextToken:
                    type: string
                    description: Token for retrieving the next page
                    example: "eyJsYXN0X2lkIjoibm9hYS1nb2VzLTE3LUwyIn0"

  /dataset/{dataset_id}:
    get:
      summary: Get dataset metadata
      description: Returns detailed metadata for a specific dataset, including native format metadata
      operationId: getDataset
      parameters:
        - name: dataset_id
          in: path
          description: Dataset identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Dataset metadata
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - title
                  - format
                  - latest_version
                  - links
                  - native_metadata
                properties:
                  id:
                    type: string
                    example: "noaa-goes-17-L2"
                  title:
                    type: string
                    example: "NOAA GOES-17 Level 2 Data"
                  description:
                    type: string
                  format:
                    type: string
                    enum: [zarr, iceberg, delta, hive]
                    description: The metadata format type, indicating how to parse the native_metadata field
                  latest_version:
                    type: string
                    nullable: true
                    description: Latest version identifier if dataset supports versioning, null otherwise
                    example: "commit-f4a2b1c8"
                  native_metadata:
                    type: object
                    description: Complete native metadata (zarr .zmetadata, iceberg metadata.json, etc)
                  links:
                    type: array
                    items:
                      $ref: '#/components/schemas/Link'
                    example:
                      - href: "/dataset/noaa-goes-17-L2"
                        rel: "self"
                        type: "application/json"
                      - href: "/dataset/noaa-goes-17-L2/data"
                        rel: "https://ccrp.io/spec/v1/rel/data"
                        type: "application/octet-stream"
                        title: "Query and retrieve data"
        '404':
          description: Dataset not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /dataset/{dataset_id}/data:
    head:
      summary: Plan a data query
      description: Returns query plan information including total size and ETag for subsequent range requests
      operationId: planDataQuery
      parameters:
        - name: dataset_id
          in: path
          description: Dataset identifier
          required: true
          schema:
            type: string
        - name: version
          in: query
          description: Specific version to query (uses latest if not specified)
          required: false
          schema:
            type: string
        - name: dimension_queries
          in: query
          description: Dimension-based query parameters
          required: false
          schema:
            $ref: '#/components/schemas/DimensionQueries'
          style: form
          explode: true
      responses:
        '200':
          description: Query plan created successfully
          headers:
            Content-Length:
              description: Total size in bytes of the data that would be returned
              schema:
                type: integer
              required: true
            ETag:
              description: Unique identifier for this query plan, required for subsequent GET requests
              schema:
                type: string
              required: true
            Accept-Ranges:
              description: Indicates server supports byte range requests
              schema:
                type: string
                const: bytes
              required: true
            CCRP-Resolved-Version:
              description: The version used for this query (only present for datasets that support versioning)
              schema:
                type: string
              required: false
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Dataset or version not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Retrieve data
      description: |
        Retrieves actual data bytes based on query parameters. Supports HTTP Range requests
        for parallel downloads when used with If-Match header containing the ETag from a
        prior HEAD request.

        Response format can be controlled via Accept header:
        - `application/octet-stream` (default): Concatenated raw bytes
        - `multipart/mixed`: Each chunk as a separate part with Content-ID
      operationId: getData
      parameters:
        - name: dataset_id
          in: path
          description: Dataset identifier
          required: true
          schema:
            type: string
        - name: version
          in: query
          description: Specific version to query (uses latest if not specified)
          required: false
          schema:
            type: string
        - name: dimension_queries
          in: query
          description: Dimension-based query parameters
          required: false
          schema:
            $ref: '#/components/schemas/DimensionQueries'
          style: form
          explode: true
      responses:
        '200':
          description: Complete data returned
          headers:
            Content-Length:
              schema:
                type: integer
            ETag:
              schema:
                type: string
            CCRP-Resolved-Version:
              description: The version used for this query (only present for datasets that support versioning)
              schema:
                type: string
              required: false
          content:
            application/octet-stream:
              description: Concatenated raw bytes of all matching chunks
              schema:
                type: string
                format: binary
            multipart/mixed:
              description: |
                Multipart response with each chunk as a separate part.
                Each part includes Content-ID header with chunk identifier.
              schema:
                type: object
              example: |
                --boundary123
                Content-ID: chunk-0-0-5-2
                Content-Type: application/octet-stream
                Content-Length: 32768

                [binary chunk data]
                --boundary123
                Content-ID: chunk-0-0-5-3
                Content-Type: application/octet-stream
                Content-Length: 32768

                [binary chunk data]
                --boundary123--
        '206':
          description: Partial content returned (Range request)
          headers:
            Content-Range:
              schema:
                type: string
                example: "bytes 0-1023/1048576"
            Content-Length:
              schema:
                type: integer
          content:
            application/octet-stream:
              description: Requested byte range of concatenated chunks
              schema:
                type: string
                format: binary
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Dataset or version not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '412':
          description: Precondition failed (ETag mismatch or expired query plan)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Query plan has expired"
                details: "Please initiate a new HEAD request"

components:
  schemas:
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Brief error message
          example: "Invalid query syntax"
        details:
          type: string
          description: Detailed error information
          example: "Unknown operator [foo] in dimension 'temperature[foo]'"
        dimension:
          type: string
          description: Specific dimension that caused the error (if applicable)
          example: "temperature"

    Link:
      type: object
      required:
        - href
        - rel
        - type
      properties:
        href:
          type: string
          description: URL of the linked resource
          example: "/dataset/noaa-goes-17-L2"
        rel:
          type: string
          description: Relationship type (IANA registered or CCRP-specific URI)
          example: "self"
        type:
          type: string
          description: Media type of the linked resource
          example: "application/json"
        method:
          type: string
          description: HTTP method to use (defaults to GET if not specified)
          enum: [GET, POST, PUT, DELETE, PATCH, HEAD, OPTIONS]
          default: GET
          example: "POST"
        title:
          type: string
          description: Human-readable title for the link
          example: "Dataset metadata"
        hreflang:
          type: string
          description: Language of the linked resource
          example: "en"
        body:
          type: object
          description: Body template or schema for requests (typically for POST/PUT)
          example:
            query: {
              type: "object",
              properties: {
                time: { type: "string" }
              }
            }

    DimensionQueries:
      type: object
      description: Dimension-based query parameters following CCRP syntax
      additionalProperties:
        type: string
        pattern: '^([^,\[]+|[^,]+(,[^,]+)*|[^,]+\[(gte|gt|lte|lt|nin)\])$'
        description: |
          Query values following CCRP syntax:
          - Single value: "value"
          - Set: "v1,v2,v3"
          - Operators: "value" with parameter name like "dim[gte]"
      example:
        time: "time[gte]=2024-01-01&time[lt]=2024-02-01"
        lat: "lat[gte]=30&lat[lt]=40"
        band: "C07,C08"
        "temperature[gte]": "20.0"
        "status[nin]": "error,cancelled"
